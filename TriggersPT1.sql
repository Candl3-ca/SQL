--TRIGGERS

SELECT * FROM CUSTOMER;

CREATE OR REPLACE TRIGGER TRI_NEW_CUSTOMER
AFTER INSERT ON CUSTOMER
BEGIN
DBMS_OUTPUT.PUT_LINE('NEW CUSTOMER ADDED');
END;

INSERT INTO CUSTOMER VALUES (10,'AAA', 'BBBBB', 'A', '615', '124356', 0);


CREATE OR REPLACE TRIGGER TRG_LINE_PROD
AFTER INSERT ON LINE
FOR EACH ROW
BEGIN
UPDATE PRODUCT
SET P_QOH = P_QOH - :NEW.LINE_UNITS
WHERE P_CODE = :NEW.P_CODE;
END;

INSERT INTO LINE VALUES (1001, 4, '11QER/31', 3,12.9,50);

SELECT * FROM LINE
SELECT * FROM PRODUCT


CREATE OR REPLACE TRIGGER TRG_REORDER
AFTER INSERT OR UPDATE OF P_QOH ON PRODUCT
BEGIN
UPDATE PRODUCT 
SET P_REORDER = 1
WHERE P_QOH <= P_MIN;
END;

CREATE OR REPLACE TRIGGER TRG_REORDER
AFTER INSERT OR UPDATE OF P_QOH,P_MIN ON PRODUCT
FOR EACH ROW
BEGIN
    IF P_QOH <= P_MIN THEN
     :NEW.P_REORDER = 1
     ELSE
     :NEW.R_REORDER = 0;
    END IF;
END;

UPDATE PRODUCT
SET P_QOH = 10
WHERE P_CODE = '13-Q2/P2';


CREATE OR REPLACE TRIGGER TRG_NEWBALANCE
AFTER INSERT ON LINE
FOR EACH ROW
DECLARE
CUS_NO NUMERIC;
BEGIN
--TO GET CUSTOMER CODE
SELECT CUS_CODE INTO CUS_NO
FROM INVOICE
WHERE INV_NUMBER = :NEW.INV_NUMBER;
--UPDATE CUSTOMER BALANCE
UPDATE CUSTOMER
SET CUS_BALANCE = CUS_BALANCE + :NEW.LINE_TOTAL
WHERE CUS_CODE = CUS_NO;
END;

SELECT * FROM LINE;
SELECT * FROM INVOICE;
SELECT * FROM CUSTOMER;
WHERE CUS_NO = 10012;

INSERT INTO LINE VALUES 







